import time
import getproxy
import json,requests,urllib.request
from traceback import print_exc
from ast import literal_eval
import pprint

def push_to_git():
    #Import dependencies
    from subprocess import call
    #Commit Message
    commit_message = "Updating json files"
    #Stage the file
    call('git add .', shell = True)
    # Add your commit
    call('git commit -m "'+ commit_message +'"', shell = True)
    #Push the new or update files
    call('git push origin master', shell = True)

def get_proxy():
    proxies=[]
    proxy= [ "125.16.131.25:8080", "27.0.180.83:56869", "103.251.222.132:8080", "180.179.171.182:3128", "103.204.231.173:8080", "219.91.166.214:51772", "117.206.149.90:8080", "103.224.185.48:52674", "116.203.97.244:443", "103.18.72.69:8080", "125.23.34.123:3128", "103.54.220.148:51886", "103.15.83.85:47955", "103.44.139.81:50981", "103.76.253.156:3128", "116.203.97.244:8000", "103.43.40.20:53286", "139.5.220.67:8080", "116.203.97.244:443", "45.123.108.158:8080", "103.93.209.154:8080", "103.250.166.16:48340", "103.69.45.68:61011", "202.3.72.50:56242", "103.79.228.177:56130", "117.196.236.204:60522", "117.254.210.226:8080", "117.239.218.226:3128", "114.69.244.66:58662", "27.0.180.83:56869", "103.251.222.132:8080", "125.16.131.25:8080", "103.194.192.29:49202", "103.38.203.68:8080", "43.225.192.85:8080", "43.241.28.248:8080", "125.23.34.123:3128", "103.224.185.48:52674", "43.225.192.85:8080", "114.69.244.66:58662", "103.18.72.69:8080", "103.15.81.154:54497", "43.241.28.248:8080", "202.62.84.210:53281", "139.5.220.67:8080", "180.179.171.182:3128", "103.38.203.68:8080", "103.15.83.85:47955", "103.65.194.225:60909", "117.240.191.165:8080", "103.54.220.148:51886", "103.76.253.156:3128", "116.203.97.244:8000", "116.203.97.244:443", "117.254.218.69:8080", "103.89.253.247:3128", "103.44.139.81:50981", "103.204.231.173:8080", "45.250.226.32:49576", "27.0.180.83:56869", "117.196.238.79:52925", "116.203.97.244:443", "202.3.72.50:56242", "219.91.166.214:51772", "180.179.171.182:3128", "103.194.192.29:49202", "103.251.222.132:8080", "103.69.45.68:61011", "117.206.149.90:8080", "103.18.72.69:8080", "203.145.179.170:58892", "125.23.34.123:3128", "103.15.83.85:47955", "45.123.108.158:8080", "43.225.192.85:8080", "116.203.98.142:8000", "116.203.97.244:443", "103.65.194.225:60909", "117.240.191.165:8080", "203.145.179.170:58892", "103.18.72.69:8080", "45.123.108.158:8080", "103.93.209.154:8080", "150.129.49.22:8080", "103.15.83.85:47955", "117.239.218.226:3128", "103.15.81.154:54497", "103.250.166.16:48340", "103.251.222.132:8080", "202.62.84.210:53281", "103.54.220.148:51886", "103.50.6.53:35977", "43.225.192.85:8080", "125.16.131.25:8080", "43.241.28.248:8080", "103.43.40.20:53286", "103.224.185.48:52674", "103.65.194.225:60909", "117.196.236.204:60522", "110.235.196.62:59175", "203.145.179.170:58892", "219.91.166.214:51772", "43.225.192.85:8080", "45.250.226.32:49576", "103.50.6.53:35977", "116.203.97.244:443", "210.18.140.146:8080", "103.15.83.85:47955", "117.240.191.165:8080", "103.204.231.173:8080", "103.43.40.20:53286", "103.250.166.16:48340", "103.93.209.154:8080", "114.69.244.66:58662", "180.179.171.182:3128", "202.3.72.50:56242", "103.43.40.20:53286", "103.15.83.85:47955", "103.18.72.69:8080", "203.145.179.170:58892", "103.93.209.154:8080", "180.179.171.182:3128", "117.239.218.226:3128", "110.235.196.62:59175", "103.76.253.156:3128", "117.240.191.165:8080", "114.69.244.66:58662", "45.123.108.158:8080", "27.0.180.83:56869", "103.250.166.16:48340", "103.206.130.118:8080", "139.5.220.67:8080", "103.89.253.247:3128", "116.203.97.244:443", "117.196.238.79:52925", "43.241.28.248:8080", "103.43.40.20:53286", "117.254.218.69:8080", "103.224.185.48:52674",   "139.59.2.44:3128", "103.76.253.156:3128", "117.254.216.180:8080", "14.142.122.134:8080", "117.206.155.158:8080", "43.224.8.114:50333", "103.70.188.105:8080", "103.74.220.47:44073", "103.15.83.85:47955", "117.254.186.122:80", "45.123.108.158:8080", "117.212.95.106:8080", "103.89.253.247:3128", "13.127.244.13:80", "59.91.121.113:60816", "117.239.218.229:3128", "117.254.210.226:8080", "103.212.93.193:61945", "114.30.75.206:61101", "103.87.47.41:8080", "117.196.228.138:8080", "117.196.232.154:8080", "117.196.230.85:39976", "43.225.169.55:8080", "117.196.230.132:8080", "117.255.220.205:8080", "117.197.41.41:42620", "103.87.24.34:8080","103.103.212.222:53281", "103.46.232.129:83", "103.216.175.4:50031", "103.69.220.11:3128", "183.87.14.250:44915", "43.225.23.49:8080", "103.82.99.65:59376", "103.224.185.10:44051", "14.102.50.28:52667", "103.69.220.11:3128", "103.216.95.16:61755", "103.218.102.22:8080", "103.225.30.1:53281", "103.216.95.16:61755", "103.72.216.194:38345", "103.226.3.233:8080", "103.54.28.26:61774", "103.72.216.194:38345", "123.176.43.218:40524", "163.53.87.22:8080", "14.102.50.28:52667", "14.102.67.101:30337", "103.225.30.1:53281", "103.88.221.114:31205", "43.241.28.55:8080", "103.112.9.12:58948", "103.224.185.10:44051", "123.176.43.218:40524", "27.116.51.115:8080", "150.242.255.247:8080", "14.102.67.101:30337", "103.54.28.26:61774", "103.226.3.233:8080", "103.205.112.1:23500", "103.105.40.145:16538", "27.116.51.115:8080", "27.116.20.209:36630", "150.242.255.247:8080", "103.105.40.145:16538", "103.102.73.71:8080", "43.227.131.129:83", "203.192.195.14:31062", "27.116.20.209:36630", "116.197.152.198:61568", "103.56.30.128:8080", "103.224.37.3:83", "202.138.127.66:80", "103.21.161.105:6666", "1.186.63.130:39142", "103.226.142.90:41386", "43.227.131.129:83", "103.224.37.3:83", "103.226.142.90:41386", "202.138.127.66:80", "103.39.251.241:8080", "103.56.30.128:8080", "103.51.26.233:30867", "183.87.153.98:49602", "103.98.79.42:46525", "14.102.44.136:60175", "103.98.79.42:46525", "183.87.153.98:49602", "150.242.255.58:8080", "14.142.145.156:80", "14.102.189.165:8080", "103.233.123.101:8080", "103.250.152.62:47650", "150.242.255.58:8080", "14.102.189.165:8080", "103.76.190.193:49939", "43.240.5.1:31777", "103.233.123.101:8080", "103.75.161.38:21776", "14.142.145.156:80", "125.62.214.201:56865", "103.47.218.77:46297", "103.76.190.193:49939", "103.199.157.133:40052", "103.75.161.38:21776", "117.211.166.214:3128", "103.69.220.13:8080", "14.102.44.136:60175", "103.15.60.21:8080", "139.5.26.27:53281", "103.69.220.13:8080", "103.47.218.77:46297", "103.25.47.130:8080", "45.112.57.230:61222", "103.25.47.130:8080", "43.240.5.1:31777", "103.46.233.15:83", "117.211.166.214:3128", "103.199.157.133:40052", "103.194.240.54:48989"]
    i,j=0,0

    for p in proxy:
        user_agent = {'User-agent': 'Mozilla/5.0'}
        url = 'http://pubproxy.com/api/proxy?country=IN&limit=20&https=True&user_agent=true'

        while(len(proxies)<2500):
            try:
                j=0
                resp = requests.get(url=url,headers=user_agent,proxies={"http": p, "https": p})
                data = resp.json()
                time.sleep(2.1)
                for proxy in data['data']:
                    proxies.append(proxy['ipPort'])
                print('Length of Proxy till '+str(i)+'th attempt is ',len(proxies))
            except Exception as e:
                print_exc()
                print('Skipped proxy '+str(p)+" "+str(i)+' time')
                break
            finally:
                i=i+1

    try:
        print("Entered Spy proxy")
        proxies=proxies+spy_proxy()
    except Exception :
        pass

    try:
        proxies=proxies+fate_proxy()
    except Exception:
        pass

    return proxies

def fate_proxy():
    resp=requests.get('https://raw.githubusercontent.com/fate0/proxylist/master/proxy.list')
    a=((resp.text).split('\n'))
    p_list=[]
    for i in a:
        try:
            p_list.append(json.loads(i))
        except Exception as e:
            continue
    np_list=[]
    for i in p_list:
        if i['country']=='IN':
            np_list.append(i)
    #print(len(np_list))
    proxy=[]
    for i in np_list:
        proxy.append((str(i['host'])+':'+str(i['port'])))
    return(proxy)

def spy_proxy():
    resp=requests.get('http://spys.me/proxy.txt')
    data=((resp.text).split("Google_passed(+)")[1]).split('\r')[0]
    data=data.split('\n')
    l=[]
    for i in data:
        if 'IN' in i:
            i=i.split(' IN')[0]
            l.append(i)
    return l


proxy_json={'data':get_proxy()}
import json
with open('proxy.json', 'w') as outfile:
    json.dump(proxy_json, outfile)
push_to_git()
